#!/bin/bash
if ! [ -n $BASH_VERSION ]
then
	return
fi
source_dir=$(dirname $(readlink -f ${BASH_SOURCE}))
my_funcs_lib_name="my_funcs"
if [ -f "${source_dir}/${my_funcs_lib_name}" ]
then
    \. "${source_dir}/${my_funcs_lib_name}"
    _my_bash_init
    _init_path
    unset -f _my_bash_init
    unset -f _init_path
fi

# set prompt
if [ -f "${source_dir}/my_prompt" ]
then
    echo "setting up prompt"
    \. "${source_dir}/my_prompt"
    _setup_prompt
    unset -f _setup_prompt

fi

if [ "${MY_BASH}" == "MY_BASH" ]
then
    if [ "$(LC_ALL=C type -t _my_bash_clean_up)" == "function" ]
    then
        _my_bash_clean_up 
        unset -f _my_bash_clean_up
    fi
    return
fi

echo "Customize the shell environment."
export MY_BASH="MY_BASH"

# SETUP ALIAS
if [ -f "${my_bash_env_dir}/.my_alias" ]
then
    . "${my_bash_env_dir}/.my_alias"
fi

if [ -f "${my_bash_env_dir}/my_alias" ]
then
    . "${my_bash_env_dir}/my_alias"
fi

if [ -f "${HOME}/.my_alias" ]
then
    . "${HOME}/.my_alias"
fi

if [ -f "$HOME/.dircolors" ]; then
    eval $(dircolors -b $HOME/.dircolors)
fi

# export LS_COLORS=$LS_COLORS:'ow=01;34:'
LS_COLORS='rs=0:di=01;34:ln=01;36:mh=00:pi=40;33:so=01;35:do=01;35:bd=40;33;01:cd=40;33;01:or=40;31;01:mi=00:su=37;41:sg=30;43:ca=30;41:tw=30;42:ow=34;42:st=37;44:ex=01;32:*.tar=01;31:*.tgz=01;31:*.arc=01;31:*.arj=01;31:*.taz=01;31:*.lha=01;31:*.lz4=01;31:*.lzh=01;31:*.lzma=01;31:*.tlz=01;31:*.txz=01;31:*.tzo=01;31:*.t7z=01;31:*.zip=01;31:*.z=01;31:*.Z=01;31:*.dz=01;31:*.gz=01;31:*.lrz=01;31:*.lz=01;31:*.lzo=01;31:*.xz=01;31:*.zst=01;31:*.tzst=01;31:*.bz2=01;31:*.bz=01;31:*.tbz=01;31:*.tbz2=01;31:*.tz=01;31:*.deb=01;31:*.rpm=01;31:*.jar=01;31:*.war=01;31:*.ear=01;31:*.sar=01;31:*.rar=01;31:*.alz=01;31:*.ace=01;31:*.zoo=01;31:*.cpio=01;31:*.7z=01;31:*.rz=01;31:*.cab=01;31:*.wim=01;31:*.swm=01;31:*.dwm=01;31:*.esd=01;31:*.jpg=01;35:*.jpeg=01;35:*.mjpg=01;35:*.mjpeg=01;35:*.gif=01;35:*.bmp=01;35:*.pbm=01;35:*.pgm=01;35:*.ppm=01;35:*.tga=01;35:*.xbm=01;35:*.xpm=01;35:*.tif=01;35:*.tiff=01;35:*.png=01;35:*.svg=01;35:*.svgz=01;35:*.mng=01;35:*.pcx=01;35:*.mov=01;35:*.mpg=01;35:*.mpeg=01;35:*.m2v=01;35:*.mkv=01;35:*.webm=01;35:*.ogm=01;35:*.mp4=01;35:*.m4v=01;35:*.mp4v=01;35:*.vob=01;35:*.qt=01;35:*.nuv=01;35:*.wmv=01;35:*.asf=01;35:*.rm=01;35:*.rmvb=01;35:*.flc=01;35:*.avi=01;35:*.fli=01;35:*.flv=01;35:*.gl=01;35:*.dl=01;35:*.xcf=01;35:*.xwd=01;35:*.yuv=01;35:*.cgm=01;35:*.emf=01;35:*.ogv=01;35:*.ogx=01;35:*.aac=00;36:*.au=00;36:*.flac=00;36:*.m4a=00;36:*.mid=00;36:*.midi=00;36:*.mka=00;36:*.mp3=00;36:*.mpc=00;36:*.ogg=00;36:*.ra=00;36:*.wav=00;36:*.oga=00;36:*.opus=00;36:*.spx=00;36:*.xspf=00;36:ow=01;34'
export EDITOR=vi
export VISUAL=vi
export PAGER=less
export HISTSIZE=10000
export HISTFILESIZE=100000
export HISTCONTROL=ignoreboth
set -o vi
set -o noclobber
if [ "${_OS}" == "Darwin" ]; then
    export CLICOLOR=1
    if [ "${_COLOR_THEME}" == "dark" ]; then
    # using iterm2 3024night scheme
        LS_COLORS='rs=0:di=00;34:ln=00;36:mh=00:pi=40;33:so=00;35:do=00;35:bd=40;33;01:cd=40;33;01:or=40;31;01:mi=00:su=37;41:sg=30;43:ca=30;41:tw=30;42:ow=34;42:st=37;44:ex=00;32:*.tar=00;31:*.tgz=00;31:*.arc=00;31:*.arj=00;31:*.taz=00;31:*.lha=00;31:*.lz4=00;31:*.lzh=00;31:*.lzma=00;31:*.tlz=00;31:*.txz=00;31:*.tzo=00;31:*.t7z=00;31:*.zip=00;31:*.z=00;31:*.Z=00;31:*.dz=00;31:*.gz=00;31:*.lrz=00;31:*.lz=00;31:*.lzo=00;31:*.xz=00;31:*.zst=00;31:*.tzst=00;31:*.bz2=00;31:*.bz=00;31:*.tbz=00;31:*.tbz2=00;31:*.tz=00;31:*.deb=00;31:*.rpm=00;31:*.jar=00;31:*.war=00;31:*.ear=00;31:*.sar=00;31:*.rar=00;31:*.alz=00;31:*.ace=00;31:*.zoo=00;31:*.cpio=00;31:*.7z=00;31:*.rz=00;31:*.cab=00;31:*.wim=00;31:*.swm=00;31:*.dwm=00;31:*.esd=00;31:*.jpg=00;35:*.jpeg=00;35:*.mjpg=00;35:*.mjpeg=00;35:*.gif=00;35:*.bmp=00;35:*.pbm=00;35:*.pgm=00;35:*.ppm=00;35:*.tga=00;35:*.xbm=00;35:*.xpm=00;35:*.tif=00;35:*.tiff=00;35:*.png=00;35:*.svg=00;35:*.svgz=00;35:*.mng=00;35:*.pcx=00;35:*.mov=00;35:*.mpg=00;35:*.mpeg=00;35:*.m2v=00;35:*.mkv=00;35:*.webm=00;35:*.ogm=00;35:*.mp4=00;35:*.m4v=00;35:*.mp4v=00;35:*.vob=00;35:*.qt=00;35:*.nuv=00;35:*.wmv=00;35:*.asf=00;35:*.rm=00;35:*.rmvb=00;35:*.flc=00;35:*.avi=00;35:*.fli=00;35:*.flv=00;35:*.gl=00;35:*.dl=00;35:*.xcf=00;35:*.xwd=00;35:*.yuv=00;35:*.cgm=00;35:*.emf=00;35:*.ogv=00;35:*.ogx=00;35:*.aac=01;36:*.au=01;36:*.flac=01;36:*.m4a=01;36:*.mid=01;36:*.midi=01;36:*.mka=01;36:*.mp3=01;36:*.mpc=01;36:*.ogg=01;36:*.ra=01;36:*.wav=01;36:*.oga=01;36:*.opus=01;36:*.spx=01;36:*.xspf=01;36:ow=00;34'
    fi
fi
export LS_COLORS

# >>> conda initialize >>>
# !! Contents within this block are managed by 'conda init' !!
# linux os conda inistallation directory
if [ -f "/opt/miniconda3/etc/profile.d/conda.sh" ]; then
. "/opt/miniconda3/etc/profile.d/conda.sh"
fi
# mac os conda installation directory
if [ -f "/usr/local/Caskroom/miniconda/base/etc/profile.d/conda.sh" ]; then
. "/usr/local/Caskroom/miniconda/base/etc/profile.d/conda.sh"
fi
# <<< conda initialize <<<

# set up prompt

[ -d "$HOME/.nvm" ] && export NVM_DIR="$HOME/.nvm"
[ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"  # This loads nvm
[ -s "$NVM_DIR/bash_completion" ] && \. "$NVM_DIR/bash_completion"  # This loads nvm bash_completion

# setup keybinding
bind -x '"\C-l": clear -x'

# find the dirname of this file
my_cur_dir=$(dirname $(readlink -f ${BASH_SOURCE}))
for f in ${my_cur_dir}/bash_completion.d/*
do
    . ${f}
done

# setup homebrew path if mac
if [ -d /opt/homebrew/bin ]
then
    export PATH=/opt/homebrew/bin:${PATH}
fi

## setup to use docker ucp if ucp-bundle directory is there
ucp_bundle=${HOME}/ucp-bundle
if [ -f ${ucp_bundle}/env.sh ]
then
    . ${ucp_bundle}/env.sh
    export DOCKER_CERT_PATH=${ucp_bundle}
fi

command -v kubectl && source <(kubectl completion bash)
[ -f ~/.fzf.bash ] && \. ~/.fzf.bash && export FZF_COMPLETION_TRIGGER='~~'

unset my_bash_env_dir
_my_bash_clean_up
unset -f _my_bash_clean_up


if [ ! -z "${MY_ADDITIONAL_SOURCES}"  ]
then
    for shell_source in "${MY_ADDITIONAL_SOURCES}"
    do
        source "${shell_source}"
    done
fi
